# Version format
version: "{build}"

# Operating system (build VM template)
os: Windows Server 2012 R2

# Environment variables
environment:
  GOROOT: c:\go
  GOPATH: c:\gopath
  PROJ:   github.com\elastic\winlogbeat

# Custom clone folder (variables are not expanded here).
clone_folder: c:\gopath\src\github.com\elastic\winlogbeat

# Scripts that run after cloning repository
install:
  - set PATH=%GOROOT%\bin;%PATH%
  - set PATH=%GOPATH%\bin;%PATH%
  - go get github.com/pierrre/gotestcover golang.org/x/tools/cmd/cover
  - set GOPATH=%GOPATH%\src\%PROJ%\Godeps\_workspace;%GOPATH%
  - go version
  - go env
  - python --version
  - appveyor DownloadFile https://raw.githubusercontent.com/pypa/pip/master/contrib/get-pip.py
  - python get-pip.py
  - set PATH=C:\Python27\Scripts;%PATH%
  - pip install jinja2 nose nose-timer

# To run your custom scripts instead of automatic MSBuild
build_script:
  # Compile
  - appveyor AddCompilationMessage "Starting Compile"
  - go build
  - appveyor AddCompilationMessage "Compile Success" -FileName "winlogbeat.exe"

# To run your custom scripts instead of automatic tests
test_script:
  # Unit tests
  - ps: Add-AppveyorTest "Unit Tests" -Outcome Running
  - mkdir build\coverage
  - gotestcover -race -coverprofile=build/coverage/integration.cov github.com/elastic/winlogbeat/...
  - ps: Update-AppveyorTest "Unit Tests" -Outcome Passed
  # System tests
  - ps: Add-AppveyorTest "System tests" -Outcome Running
  - go test -race -c -cover -covermode=atomic -coverpkg ./...
  - ps: cd tests/system
  - nosetests --with-timer
  - ps: Update-AppveyorTest "System tests" -Outcome Passed

after_test: 
  - cd c:\gopath\src\github.com\elastic\winlogbeat
  # TODO: Aggregate coverage data from python tests
  - go tool cover -html=build\coverage\integration.cov -o build\coverage\integration.html
  - ps: Push-AppveyorArtifact build\coverage\integration.cov
  - ps: Push-AppveyorArtifact build\coverage\integration.html
  # Upload coverage report.
  - "SET PATH=C:\\Python34;C:\\Python34\\Scripts;%PATH%"
  - pip install codecov
  - codecov -X gcov -f "build\coverage\integration.cov"

# Executes for both successful and failed builds
on_finish:
  - cd c:\gopath\src\github.com\elastic\winlogbeat
  - 7z a -r system-tests-output.zip build\system-tests\run
  - ps: Push-AppveyorArtifact system-tests-output.zip

# To disable deployment
deploy: off

# Notifications should only be setup using the AppVeyor UI so that
# forks can be created without inheriting the settings.
